# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()
GET    /login                          controllers.Application.login()
POST    /login                          controllers.Application.authenticate()
GET		/logout						controllers.Application.logout()
GET    /register                          controllers.Application.registerForm()
POST   /register                          controllers.Application.register()
GET    /list                          controllers.Application.list()



GET     /javascriptRoutes     controllers.Application.javascriptRoutes()

#Courses
GET    /courses                          controllers.Courses.index()
POST    /courses                          controllers.Courses.newCourse()
POST    /courses/:id/delete                     controllers.Courses.deleteCourse(id: Long)

POST    /courses/:id                        controllers.Courses.updateCourse(id: Long)
GET    /courses/:id                         controllers.Courses.coursePage(id: Long)
GET    /courses/:id/description             controllers.Courses.courseDescription(id: Long)
POST    /                        controllers.Courses.join(course: Long)

#Announcements
GET    /course/announcements           controllers.Announcements.index()
POST    /course/announcements          controllers.Announcements.newAnnouncement()
POST    /course/announcement/:aid/delete   controllers.Announcements.deleteAnnouncement(aid: Long)
GET    /course/announcements/:aid        controllers.Announcements.announcementPage(aid: Long)
POST    /course/announcements/:aid       controllers.Announcements.updateAnnouncement(aid: Long)


#Lectures
GET    /course/lectures           controllers.Lectures.index()

POST    /course/lectures          controllers.Lectures.newLecture()
POST    /course/lecture/:id/addVideo          controllers.Lectures.addVideo(id: Long)

POST    /course/lecture/updateTitle          controllers.Lectures.updateTitle()
POST    /course/lecture/updateContent          controllers.Lectures.updateContent()
POST    /course/lecture/:id/addSlide          controllers.Lectures.addSlide(id: Long)
POST    /course/lecture/updateResourceTitle          controllers.Lectures.updateResourceTitle()
POST    /course/lecture/:lid/removeResource    controllers.Lectures.removeResource(rid: Long,lid: Long)
POST    /course/lecture/:aid/delete   controllers.Lectures.deleteLecture(aid: Long)
GET    /course/lectures/:aid        controllers.Lectures.lecturePage(aid: Long)
GET    /course/lecture/:id           controllers.Lectures.getLecture(id: Long)
POST    /course/lectures/:aid       controllers.Lectures.updateLecture(aid: Long)

#CourseInformation
GET    /course/courseInformations           controllers.CourseInformations.index()
POST    /course/courseInformations          controllers.CourseInformations.newCourseInformation()
POST    /course/courseInformation/:aid/delete   controllers.CourseInformations.deleteCourseInformation(aid: Long)
GET    /course/courseInformations/:aid        controllers.CourseInformations.courseInformationPage(aid: Long)
POST    /course/courseInformations/:aid       controllers.CourseInformations.updateCourseInformation(aid: Long)
GET    /course/courseInformation/:id           controllers.CourseInformations.getCourseInformation(id: Long)


#
GET     /student                         controllers.Students.index()

#Users
GET    /user/upload                       controllers.Users.upload()
POST    /user/profile                     controllers.Users.profile()
GET    /user/profile					  controllers.Users.pro()

POST    /user/editUser                     controllers.Users.editUser()
POST    /user/changePassword               controllers.Users.changePassword()
        



# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

